apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  labels:
    app: front-end
spec:
  replicas: 3
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2

---

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2024-10-31T16:07:17Z"
  labels:
    app: front-end
  name: front-end-svc
  namespace: my-app
  resourceVersion: "483717"
  uid: 82e294ae-2aaf-4193-95f4-ba14d75ddb44
spec:
  clusterIP: 10.96.255.141
  clusterIPs:
  - 10.96.255.141
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 31838
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: front-end
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}


---
#  k create svc nodeport front-end-svc1 --tcp=80:80 -n my-app
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2024-10-31T16:15:55Z"
  labels:
    app: front-end-svc1
  name: front-end-svc1
  namespace: my-app
  resourceVersion: "484505"
  uid: 538d53a1-0dbd-4bc0-b823-d964c58653cc
spec:
  clusterIP: 10.96.243.78
  clusterIPs:
  - 10.96.243.78
  externalTrafficPolicy: Cluster
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - nodePort: 31856
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: front-end-svc1
  sessionAffinity: None
  type: NodePort
status:
  loadBalancer: {}